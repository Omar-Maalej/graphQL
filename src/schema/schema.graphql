  enum Role{
    ADMIN
    USER
  }
  type Skill {
    id: ID!,
    designation : String!,
    cvs : [Cv]
  }

  type User {
    id: ID!,
    name: String,
    email: String,
    role: Role,
    cvs : [Cv],

  }

  type Cv {
    id: ID!,
    name: String!,
    age: Int,
    job: String,
    skills: [Skill]
    user : User,
  }

type Query {
  getAllCVs: [Cv],
  getCVById(id: ID!): Cv
}

input CvCreateInput {
  name: String!
  age: Int!
  job: String!
  userId: ID!
  skillIds: [ID!]!
}

input CvUpdateInput {
  name: String
  age: Int
  job: String
  userId: ID
  skillIds: [ID!]
}
    
type Mutation {
  createCv(input: CvCreateInput) : Cv,
  updateCv(input: CvUpdateInput) : Cv
}